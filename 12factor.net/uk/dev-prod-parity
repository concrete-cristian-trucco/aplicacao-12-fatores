<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">

  <title>The Twelve-Factor App (Переклад українською)</title>
  <meta name="description" content="A methodology for building modern, scalable, maintainable software-as-a-service apps.">
  <meta name="author" content="Adam Wiggins">

  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut icon" href="images/favicon.ico">

  <link rel="stylesheet" href="/css/screen.css" media="screen">
  <link rel="stylesheet" href="/css/mobile.css" media="screen">

  <script type="text/javascript" src="//use.typekit.com/rsq7tro.js"></script>
  <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>
  
  <!-- Google Tag Manager -->
  <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-TK5QTP"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-TK5QTP');</script>
  <!-- End Google Tag Manager -->
  

  <header>
    <h1><a href="./" title="The Twelve-Factor App">The Twelve-Factor App</a></h1>
  </header>

  <section class="abstract" id="factor">
  <article>
    
<h2 id="x_devprod_">X. Dev/prod паритет</h2>

<h3 id="___development_staging__production_">Прагніть максимальної ідентичності development, staging та production середовищ</h3>

<p>Історично склалося, що є суттєві відмінності між development середовищем (розробник вносить живі зміни в <a href="./codebase">локально розгорнутий</a> застосунок) і production середовищем (до якого мають доступ кінцеві користувачі). Ці відмінності проявляються в трьох областях:</p>

<ul>
<li><strong>Різниця в часі</strong>: Розробник може працювати над кодом, який потрапить у production через дні, тижні або навіть місяці;</li>

<li><strong>Різниця в персоналі</strong>: Розробники пишуть код, Ops-інженери розгортають його;</li>

<li><strong>Різниця в інструментах</strong>: Розробники можуть використовувати стек технологій такий, як Nginx, SQLite та OS X, в той час як на production використовується Apache, MySQL та Linux.</li>
</ul>

<p><strong>Застосунок дванадцяти факторів проектується для <a href="http://avc.com/2011/02/continuous-deployment/">безперервного розгортання</a>, завдяки мінімізації різниці між production і development середовищами.</strong> Розглянемо три відмінності, описані вище:</p>

<ul>
<li>Зменшити різницю в часі: розробник може написати код і він буде розгорнутий через декілька годин або навіть хвилин;</li>

<li>Зменшити різницю в персоналі: розробники, які писали код, беруть активну участь в його розгортанні і спостерігають за його поведінкою на production;</li>

<li>Зменшити різницю в інструментах: тримати development та production середовища максимально ідентичними.</li>
</ul>

<p>Резюмуючи сказане вище в таблицю:</p>
<table>
  <tr>
    <th />
    <th>Традиційний застосунок</th>
    <th>Застосунок дванадцати факторів</th>
  </tr>
  <tr>
    <th>Час між розгортаннями</th>
    <td>Тижні</td>
    <td>Години</td>
  </tr>
  <tr>
    <th>Автор коду/той хто розгортає</th>
    <td>Різні люди</td>
    <td>Ті ж люди</td>
  </tr>
  <tr>
    <th>Dev/Prod розгортання</th>
    <td>Різні</td>
    <td>Максимально ідентичні</td>
  </tr>
</table>
<p><a href="./backing-services">Сторонні служби</a>, такі як бази даних, системи черг повідомлень або кеш, є однією з областей, де dev/prod паритет має важливе значення. Багато мов програмування мають бібліотеки, які спрощують доступ до сторонніх служб, в тому числі, <em>адаптери</em> для різних видів сервісів. Деякі приклади наведені в таблиці нижче.</p>
<table>
  <tr>
    <th>Тип</th>
    <th>Мова</th>
    <th>Бібліотека</th>
    <th>Адаптери</th>
  </tr>
  <tr>
    <td>База даних</td>
    <td>Ruby/Rails</td>
    <td>ActiveRecord</td>
    <td>MySQL, PostgreSQL, SQLite</td>
  </tr>
  <tr>
    <td>Черга повідомлень</td>
    <td>Python/Django</td>
    <td>Celery</td>
    <td>RabbitMQ, Beanstalkd, Redis</td>
  </tr>
  <tr>
    <td>Кеш</td>
    <td>Ruby/Rails</td>
    <td>ActiveSupport::Cache</td>
    <td>Пам'ять, файлова система, Memcached</td>
  </tr>
</table>
<p>Іноді розробники бачать переваги у використанні “легких” сторонніх служб в їхньому локальному середовищі, в той час як більш серйозні і надійні сторонні служби будуть використовуватися у production. Наприклад, локально використовують SQLite, а на production PostgreSQL; або локально пам’ять процесу для кешування, а на production Memcached.</p>

<p><strong>Розробник застосунку дванадцяти факторів уникає використання різних сторонніх служб в development і production середовищах</strong>, навіть якщо адаптери теоретично абстраговані від будь-яких відмінностей у сторонніх службах. Відмінності між сторонніми службами означають, що може виникнути крихітна несумісність, в результаті чого код, який працював і пройшов тестування в development та staging середовищах, після розгортання не працює в production середовищі. Такий тип помилок створює перешкоди, які нівелюють переваги безперервного розгортання. Ціна цих перешкод і подальшого відновлення безперервного розгортання надзвичайно висока, якщо розглядати в сукупності за весь час експлуатації застосунку.</p>

<p>Встановлення локально “легких” сторонніх сервісів вже не є таким привабливим, як було раніше. Сучасні надійні сторонні сервіси, такі як Memcached, PostgreSQL і RabbitMQ, досить легко встановити і запустити завдяки сучасним менеджерам пакунків, таким як <a href="http://mxcl.github.com/homebrew/">Homebrew</a> і <a href="https://help.ubuntu.com/community/AptGet/Howto">apt-get</a>. Крім того, декларативні інструменти підготовки середовища, такі як <a href="http://www.opscode.com/chef/">Chef</a> і <a href="http://docs.puppetlabs.com/">Puppet</a>, у поєднанні з “легким” віртуальним середовищем, таким як <a href="http://vagrantup.com/">Vagrant</a>, дозволяють розробникам запускати локальні середовища, які наближені до production. Ціна встановлення і використання цих систем є низькою у порівнянні з користю dev/prod паритету і безперервного розгортання.</p>

<p>Адаптери для різних сторонніх сервісів все ж корисні, тому що вони роблять перенесення застосунку для використання з іншими сторонніми сервісами відносно безболісним. Але всі розгортання застосунку (development, staging та production середовища) мають використовувати один і той самий тип і версію кожного зі сторонніх сервісів.</p>

  </article>
</section>

<section class="concrete">
  <nav>
    <div id="locales"><a href="/ru/dev-prod-parity">Русский (ru)</a> | <a href="/dev-prod-parity">English (en)</a> | <a href="/ja/dev-prod-parity">日本語 (ja)</a> | <a href="/tr/dev-prod-parity">Turkish (tr)</a> | <a href="/ko/dev-prod-parity">한국어 (ko)</a> | <a href="/fr/dev-prod-parity">Français (fr)</a> | <a href="/de/dev-prod-parity">Deutsch (de)</a> | <a href="/pl/dev-prod-parity">Polski (pl)</a> | <a href="/it/dev-prod-parity">Italiano (it)</a> | <span>Українська (uk)</span> | <a href="/es/dev-prod-parity">Español (es)</a> | <a href="/zh_cn/dev-prod-parity">简体中文 (zh_cn)</a> | <a href="/pt_br/dev-prod-parity">Brazilian Portuguese (pt_br)</a></div>
    <div id="prev"><a href="./disposability">&laquo; Previous</a></div>
    <div id="next"><a href="./logs">Next &raquo;</a></div>
  </nav>
</section>


  <footer>
  <div id="locales"><a href="/ru/dev-prod-parity">Русский (ru)</a> | <a href="/dev-prod-parity">English (en)</a> | <a href="/ja/dev-prod-parity">日本語 (ja)</a> | <a href="/tr/dev-prod-parity">Turkish (tr)</a> | <a href="/ko/dev-prod-parity">한국어 (ko)</a> | <a href="/fr/dev-prod-parity">Français (fr)</a> | <a href="/de/dev-prod-parity">Deutsch (de)</a> | <a href="/pl/dev-prod-parity">Polski (pl)</a> | <a href="/it/dev-prod-parity">Italiano (it)</a> | <span>Українська (uk)</span> | <a href="/es/dev-prod-parity">Español (es)</a> | <a href="/zh_cn/dev-prod-parity">简体中文 (zh_cn)</a> | <a href="/pt_br/dev-prod-parity">Brazilian Portuguese (pt_br)</a></div>
  <div>Written by Adam Wiggins</div>
  <div>Last updated 2017</div>
  <div><a href="https://github.com/heroku/12factor">Sourcecode</a></div>
  <div><a href="/12factor.epub">Download ePub Book</a></div>
  <div><a href="https://www.heroku.com/policy/privacy">Privacy Policy</a></div>
</footer>
</body>
</html>
