<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">

  <title>The Twelve-Factor App (Русский перевод)</title>
  <meta name="description" content="A methodology for building modern, scalable, maintainable software-as-a-service apps.">
  <meta name="author" content="Adam Wiggins">

  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut icon" href="images/favicon.ico">

  <link rel="stylesheet" href="/css/screen.css" media="screen">
  <link rel="stylesheet" href="/css/mobile.css" media="screen">

  <script type="text/javascript" src="//use.typekit.com/rsq7tro.js"></script>
  <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>
  
  <!-- Google Tag Manager -->
  <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-TK5QTP"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-TK5QTP');</script>
  <!-- End Google Tag Manager -->
  

  <header>
    <h1><a href="./" title="The Twelve-Factor App">The Twelve-Factor App</a></h1>
  </header>

  <section class="abstract" id="factor">
  <article>
    
<h2 id="x___">X. Паритет разработки/работы приложения</h2>

<h3 id="_____staging____production__">Держите окружения разработки, промежуточного развёртывания (staging) и рабочего развёртывания (production) максимально похожими</h3>

<p>Исторически существуют значительные различия между разработкой (разработчик делает живые изменения на локальном <a href="./codebase">развёртывании</a> приложения) и работой приложения (развёртывание приложения с доступом к нему конечных пользователей). Эти различия проявляются в трёх областях:</p>

<ul>
<li><strong>Различие во времени:</strong> разработчик может работать с кодом, который попадёт в рабочую версию приложения только через дни, недели или даже месяцы.</li>

<li><strong>Различие персонала</strong>: разработчики пишут код, OPS инженеры разворачивают его.</li>

<li><strong>Различие инструментов</strong>: разработчики могут использовать стек технологий, такой как Nginx, SQLite, и OS X, в то время как при рабочем развёртывании используются Apache, MySQL и Linux.</li>
</ul>

<p><strong>Приложение двенадцати факторов спроектировано для <a href="http://avc.com/2011/02/continuous-deployment/">непрерывного развёртывания</a> благодаря минимизации различий между разработкой и работой приложения. Рассмотрим три различия, описанных выше:</strong></p>

<ul>
<li>Сделать различие во времени небольшим: разработчик может написать код, и он будет развёрнут через несколько часов или даже минут.</li>

<li>Сделать небольшими различия персонала: разработчик который написал код, активно участвует в его развёртывании и наблюдает за его поведением во время работы приложения.</li>

<li>Сделать различия инструментов небольшими: держать окружение разработки и работы приложения максимально похожими.</li>
</ul>

<p>Резюмируя сказанное выше в таблицу:</p>
<table>
  <tr>
    <th />
    <th>Традиционное приложение</th>
    <th>Приложение двенадцати факторов</th>
  </tr>
  <tr>
    <th>Время между развёртываниями</th>
    <td>Недели</td>
    <td>Часы</td>
  </tr>
  <tr>
    <th>Автор кода/тот кто разворачивает</th>
    <td>Разные люди</td>
    <td>Те же люди</td>
  </tr>
  <tr>
    <th>Окружение разработки/работы приложения</th>
    <td>Различные</td>
    <td>Максимально похожие</td>
  </tr>
</table>
<p><a href="./backing-services">Сторонние службы</a>, такие как базы данных, системы очередей сообщений и кэш, являются одной из областей, где паритет при разработке и работе приложения имеет важное значение. Многие языки предоставляют библиотеки, которые упрощают доступ к сторонним службам, включая <em>адаптеры</em> для доступа к различных типам сервисов. Некоторые примеры, в таблице ниже.</p>
<table>
  <tr>
    <th>Тип</th>
    <th>Язык</th>
    <th>Библиотека</th>
    <th>Адаптеры</th>
  </tr>
  <tr>
    <td>База данных</td>
    <td>Ruby/Rails</td>
    <td>ActiveRecord</td>
    <td>MySQL, PostgreSQL, SQLite</td>
  </tr>
  <tr>
    <td>Очередь сообщений</td>
    <td>Python/Django</td>
    <td>Celery</td>
    <td>RabbitMQ, Beanstalkd, Redis</td>
  </tr>
  <tr>
    <td>Кэш</td>
    <td>Ruby/Rails</td>
    <td>ActiveSupport::Cache</td>
    <td>Память, файловая система, Memcached</td>
  </tr>
</table>
<p>Иногда разработчики находят удобным использовать лёгкие сторонние службы в их локальном окружении, в то время как более серьёзные и надёжные сторонние сервисы будут использованы в рабочем окружении. Например используют SQLite локально и PostgreSQL в рабочем окружении; или память процесса для кэширования при разработке и Memcached в рабочем окружении.</p>

<p><strong>Разработчик приложения двенадцати факторов сопротивляется искушению использовать различные сторонние сервисы при разработке и в рабочем окружении</strong>, даже когда адаптеры теоретически абстрагированы от различий в сторонних сервисах. Различия в используемых сторонних сервисах означают, что может возникнуть крошечная несовместимость, которая станет причиной того, что код, который работал и прошёл тесты при разработке и промежуточном развёртывании не работает в рабочем окружении. Такой тип ошибок создаёт помехи, которые нивелируют преимущества непрерывного развёртывания. Стоимость этих помех и последующего восстановления непрерывного развёртывания является чрезвычайно высокой, если рассматривать в совокупности за всё время существования приложения.</p>

<p>Установка локальных сервисов стала менее непреодолимой задачей, чем она когда-то была. Современные сторонние сервисы, такие как Memcached, PostgreSQL и RabbitMQ не трудно установить и запустить благодаря современным менеджерам пакетов, таким как <a href="http://mxcl.github.com/homebrew/">Homebrew</a> и <a href="https://help.ubuntu.com/community/AptGet/Howto">apt-get</a>. Кроме того, декларативные инструменты подготовки окружения, такие как <a href="http://www.opscode.com/chef/">Chef</a> и <a href="http://docs.puppetlabs.com/">Puppet</a> в сочетании с легковесным виртуальным окружением, таким как <a href="http://vagrantup.com/">Vagrant</a> позволяют разработчикам запустить локальное окружение которое максимально приближено к рабочему окружению. Стоимость установки и использования этих систем ниже по сравнению с выгодой, получаемой от паритета разработки/работы приложения и непрерывного развёртывания.</p>

<p>Адаптеры для различных сторонних сервисов по-прежнему полезны, потому что они позволяют портировать приложение для использования новых сторонних сервисов относительно безболезненно. Но все развёртывания приложения (окружение разработчика, промежуточное и рабочее развёртывание) должны использовать тот же тип и ту же версию каждого из сторонних сервисов.</p>

  </article>
</section>

<section class="concrete">
  <nav>
    <div id="locales"><a href="/dev-prod-parity">English (en)</a> | <a href="/ko/dev-prod-parity">한국어 (ko)</a> | <a href="/ja/dev-prod-parity">日本語 (ja)</a> | <a href="/it/dev-prod-parity">Italiano (it)</a> | <a href="/pl/dev-prod-parity">Polski (pl)</a> | <a href="/zh_cn/dev-prod-parity">简体中文 (zh_cn)</a> | <a href="/de/dev-prod-parity">Deutsch (de)</a> | <a href="/es/dev-prod-parity">Español (es)</a> | <a href="/fr/dev-prod-parity">Français (fr)</a> | <a href="/tr/dev-prod-parity">Turkish (tr)</a> | <a href="/uk/dev-prod-parity">Українська (uk)</a> | <a href="/pt_br/dev-prod-parity">Brazilian Portuguese (pt_br)</a> | <span>Русский (ru)</span></div>
    <div id="prev"><a href="./disposability">&laquo; Previous</a></div>
    <div id="next"><a href="./logs">Next &raquo;</a></div>
  </nav>
</section>


  <footer>
  <div id="locales"><a href="/dev-prod-parity">English (en)</a> | <a href="/ko/dev-prod-parity">한국어 (ko)</a> | <a href="/ja/dev-prod-parity">日本語 (ja)</a> | <a href="/it/dev-prod-parity">Italiano (it)</a> | <a href="/pl/dev-prod-parity">Polski (pl)</a> | <a href="/zh_cn/dev-prod-parity">简体中文 (zh_cn)</a> | <a href="/de/dev-prod-parity">Deutsch (de)</a> | <a href="/es/dev-prod-parity">Español (es)</a> | <a href="/fr/dev-prod-parity">Français (fr)</a> | <a href="/tr/dev-prod-parity">Turkish (tr)</a> | <a href="/uk/dev-prod-parity">Українська (uk)</a> | <a href="/pt_br/dev-prod-parity">Brazilian Portuguese (pt_br)</a> | <span>Русский (ru)</span></div>
  <div>Written by Adam Wiggins</div>
  <div>Last updated 2017</div>
  <div><a href="https://github.com/heroku/12factor">Sourcecode</a></div>
  <div><a href="/12factor.epub">Download ePub Book</a></div>
  <div><a href="https://www.heroku.com/policy/privacy">Privacy Policy</a></div>
</footer>
</body>
</html>
