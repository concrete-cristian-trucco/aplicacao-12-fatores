<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">

  <title>The Twelve-Factor App (traduzido)</title>
  <meta name="description" content="A methodology for building modern, scalable, maintainable software-as-a-service apps.">
  <meta name="author" content="Adam Wiggins">

  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut icon" href="images/favicon.ico">

  <link rel="stylesheet" href="/css/screen.css" media="screen">
  <link rel="stylesheet" href="/css/mobile.css" media="screen">

  <script type="text/javascript" src="//use.typekit.com/rsq7tro.js"></script>
  <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>
  
  <!-- Google Tag Manager -->
  <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-TK5QTP"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-TK5QTP');</script>
  <!-- End Google Tag Manager -->
  

  <header>
    <h1><a href="./" title="The Twelve-Factor App">The Twelve-Factor App</a></h1>
  </header>

  <section class="abstract" id="factor">
  <article>
    
<h2 id="x_paridade_entre_desenvolvimento_e_produo">X. Paridade entre desenvolvimento e produção</h2>

<h3 id="mantenha_o_desenvolvimento_homologao_e_produo_o_mais_similares_possvel">Mantenha o desenvolvimento, homologação e produção o mais similares possível</h3>

<p>Historicamente, houveram lacunas substanciais entre desenvolvimento (um desenvolvedor editando código num <a href="./codebase">deploy</a> local do app) e produção (um deploy acessado pelos usuários finais). Essas lacunas se manifestam em três áreas:</p>

<ul>
<li><strong>A lacuna do tempo:</strong> Um desenvolvedor pode trabalhar em código que demora dias, semanas ou até meses para ir para produção.</li>

<li><strong>A lacuna de pessoal:</strong> Desenvolvedores escrevem código, engenheiros de operação fazem o deploy dele.</li>

<li><strong>A lacuna de ferramentas:</strong> Desenvolvedores podem estar usando um conjunto como Nginx, SQLite, e OS X, enquanto o app em produção usa Apache, MySQL, e Linux.</li>
</ul>

<p><strong>O App doze-fatores é projetado para <a href="http://avc.com/2011/02/continuous-deployment/">implantação contínua</a> deixando a lacuna entre desenvolvimento e produção pequena.</strong> Olhando às três lacunas descritas acima:</p>

<ul>
<li>Diminua a lacuna de tempo: um desenvolvedor pode escrever código e ter o deploy feito em horas ou até mesmo minutos depois.</li>

<li>Diminua a lacuna de pessoal: desenvolvedores que escrevem código estão proximamente envolvidos em realizar o deploy e acompanhar seu comportamento em produção.</li>

<li>Diminua a lacuna de ferramentas: mantenha desenvolvimento e produção o mais similares possível.</li>
</ul>

<p>Resumindo o acima em uma tabela:</p>
<table>
  <tr>
    <th />
    <th>App tradicional</th>
    <th>App doze-fatores</th>
  </tr>
  <tr>
    <th>Tempo entre deploys</th>
    <td>Semanas</td>
    <td>Horas</td>
  </tr>
  <tr>
    <th>Autores de código vs deployers</th>
    <td>Pessoas diferentes</td>
    <td>Mesmas pessoas</td>
  </tr>
  <tr>
    <th>Ambientes de desenvolvimento vs produção</th>
    <td>Divergente</td>
    <td>O mais similar possível</td>
  </tr>
</table>
<p><a href="./backing-services">Serviços de apoio</a>, como o banco de dados do app, sistema de filas, ou cache, são uma área onde paridade entre desenvolvimento e produção é importante. Muitas linguagens oferecem diferentes bibliotecas que simplificam o acesso ao serviço de apoio, incluindo <em>adaptadores</em> para os diferentes tipos de serviços. Alguns exemplos na tabela abaixo.</p>
<table>
  <tr>
    <th>Tipo</th>
    <th>Linguagem</th>
    <th>Biblioteca</th>
    <th>Adaptadores</th>
  </tr>
  <tr>
    <td>Banco de dados</td>
    <td>Ruby/Rails</td>
    <td>ActiveRecord</td>
    <td>MySQL, PostgreSQL, SQLite</td>
  </tr>
  <tr>
    <td>Fila</td>
    <td>Python/Django</td>
    <td>Celery</td>
    <td>RabbitMQ, Beanstalkd, Redis</td>
  </tr>
  <tr>
    <td>Cache</td>
    <td>Ruby/Rails</td>
    <td>ActiveSupport::Cache</td>
    <td>Memory, sistema de arquivos, Memcached</td>
  </tr>
</table>
<p>Desenvolvedores as vezes vem uma grande vantagem em usar um serviço de apoio leve em seus ambientes, enquanto um serviço de apoio mais sério e robusto seria usado em produção. Por exemplo, usando SQLite localmente e PostgreSQL em produção; ou memória de processo local para caching em desenvolvimento e Memcached em produção.</p>

<p><strong>O desenvolvedor doze-fatores resiste a tentação de usar diferentes serviços de apoio entre desenvolvimento e produção</strong>, mesmo quando adaptadores teoricamente abstraem as diferenças dos serviços de apoio. Diferenças entre serviços de apoio significam que pequenas incompatibilidades aparecerão, fazendo com que código que funcionava e passava em desenvolvimento ou homologação, falhe em produção. Tais tipos de erros criam fricção que desincentivam deploy contínuo. O custo dessa fricção e do subsequente decaimento de deploy contínuo é extremamente alto quando considerado que vai acumular no tempo de vida da aplicação.</p>

<p>Serviços locais leves são menos tentadores que já foram um dia. Serviços de apoio modernos tais como Memcached, PostgreSQL, e RabbitMQ não são difíceis de instalar e rodam graças a sistemas modernos de empacotamento tais como <a href="http://mxcl.github.com/homebrew/">Homebrew</a> e <a href="https://help.ubuntu.com/community/AptGet/Howto">apt-get</a>. Alternativamente, ferramentas de provisionamento declarativo tais como <a href="http://www.opscode.com/chef/">Chef</a> e <a href="http://docs.puppetlabs.com/">Puppet</a> combinado com ambientes virtuais leves como <a href="http://vagrantup.com/">Vagrant</a> permitem desenvolvedores rodar ambientes locais que são bem próximos dos ambientes de produção. O custo de instalar e usar esses sistemas é baixo comparado ao benefício de ter a paridade entre desenvolvimento, produção e deploy contínuo.</p>

<p>Adaptadores para diferentes serviços de apoio ainda são úteis, pois eles fazem a portabilidade para novos serviços de apoio relativamente tranquilas. Mas todos os deploys do app (ambientes de desenvolvimento, homologação, produção) devem usar o mesmo tipo e versão de cada serviço de apoio.</p>

  </article>
</section>

<section class="concrete">
  <nav>
    <div id="locales"><a href="/dev-prod-parity">English (en)</a> | <a href="/ko/dev-prod-parity">한국어 (ko)</a> | <a href="/ja/dev-prod-parity">日本語 (ja)</a> | <a href="/it/dev-prod-parity">Italiano (it)</a> | <a href="/pl/dev-prod-parity">Polski (pl)</a> | <a href="/zh_cn/dev-prod-parity">简体中文 (zh_cn)</a> | <a href="/de/dev-prod-parity">Deutsch (de)</a> | <a href="/es/dev-prod-parity">Español (es)</a> | <a href="/fr/dev-prod-parity">Français (fr)</a> | <a href="/tr/dev-prod-parity">Turkish (tr)</a> | <a href="/uk/dev-prod-parity">Українська (uk)</a> | <span>Brazilian Portuguese (pt_br)</span> | <a href="/ru/dev-prod-parity">Русский (ru)</a></div>
    <div id="prev"><a href="./disposability">&laquo; Previous</a></div>
    <div id="next"><a href="./logs">Next &raquo;</a></div>
  </nav>
</section>


  <footer>
  <div id="locales"><a href="/dev-prod-parity">English (en)</a> | <a href="/ko/dev-prod-parity">한국어 (ko)</a> | <a href="/ja/dev-prod-parity">日本語 (ja)</a> | <a href="/it/dev-prod-parity">Italiano (it)</a> | <a href="/pl/dev-prod-parity">Polski (pl)</a> | <a href="/zh_cn/dev-prod-parity">简体中文 (zh_cn)</a> | <a href="/de/dev-prod-parity">Deutsch (de)</a> | <a href="/es/dev-prod-parity">Español (es)</a> | <a href="/fr/dev-prod-parity">Français (fr)</a> | <a href="/tr/dev-prod-parity">Turkish (tr)</a> | <a href="/uk/dev-prod-parity">Українська (uk)</a> | <span>Brazilian Portuguese (pt_br)</span> | <a href="/ru/dev-prod-parity">Русский (ru)</a></div>
  <div>Written by Adam Wiggins</div>
  <div>Last updated 2017</div>
  <div><a href="https://github.com/heroku/12factor">Sourcecode</a></div>
  <div><a href="/12factor.epub">Download ePub Book</a></div>
  <div><a href="https://www.heroku.com/policy/privacy">Privacy Policy</a></div>
</footer>
</body>
</html>
